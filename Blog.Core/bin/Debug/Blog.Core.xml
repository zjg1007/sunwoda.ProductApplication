<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blog.Core</name>
    </assembly>
    <members>
        <member name="T:Blog.Core.AOP.BlogCacheAOP">
            <summary>
            面向切面的缓存使用
            </summary>
        </member>
        <member name="T:Blog.Core.AOP.BlogLogAOP">
            <summary>
            拦截器BlogLogAOP 继承IInterceptor接口
            </summary>
        </member>
        <member name="M:Blog.Core.AOP.BlogLogAOP.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            实例化IInterceptor唯一方法 
            </summary>
            <param name="invocation">包含被拦截方法的信息</param>
        </member>
        <member name="T:Blog.Core.AOP.BlogRedisCacheAOP">
            <summary>
            面向切面的缓存使用
            </summary>
        </member>
        <member name="T:Blog.Core.AOP.BlogTranAOP">
            <summary>
            事务拦截器BlogTranAOP 继承IInterceptor接口
            </summary>
        </member>
        <member name="M:Blog.Core.AOP.BlogTranAOP.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            实例化IInterceptor唯一方法 
            </summary>
            <param name="invocation">包含被拦截方法的信息</param>
        </member>
        <member name="M:Blog.Core.AOP.CacheAOPbase.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            AOP的拦截方法
            </summary>
            <param name="invocation"></param>
        </member>
        <member name="M:Blog.Core.AOP.CacheAOPbase.CustomCacheKey(Castle.DynamicProxy.IInvocation)">
            <summary>
            自定义缓存的key
            </summary>
            <param name="invocation"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.AOP.CacheAOPbase.GetArgumentValue(System.Object)">
            <summary>
            object 转 string
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.AuthHelper.OverWrite.JwtHelper.IssueJwt(Blog.Core.AuthHelper.OverWrite.TokenModelJwt)">
            <summary>
            颁发JWT字符串
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.AuthHelper.OverWrite.JwtHelper.SerializeJwt(System.String)">
            <summary>
            解析
            </summary>
            <param name="jwtStr"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.AuthHelper.OverWrite.TokenModelJwt">
            <summary>
            令牌
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.OverWrite.TokenModelJwt.Uid">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.OverWrite.TokenModelJwt.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.OverWrite.TokenModelJwt.Work">
            <summary>
            职能
            </summary>
        </member>
        <member name="T:Blog.Core.AuthHelper.JwtTokenAuth">
            <summary>
            中间件
            原做为自定义授权中间件
            先做检查 header token的使用
            </summary>
        </member>
        <member name="F:Blog.Core.AuthHelper.JwtTokenAuth._next">
            <summary>
            
            </summary>
        </member>
        <member name="M:Blog.Core.AuthHelper.JwtTokenAuth.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Blog.Core.AuthHelper.JwtTokenAuth.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.AuthHelper.JwtToken">
            <summary>
            JWTToken生成类
            </summary>
        </member>
        <member name="M:Blog.Core.AuthHelper.JwtToken.BuildJwtToken(System.Security.Claims.Claim[],Blog.Core.AuthHelper.PermissionRequirement)">
            <summary>
            获取基于JWT的Token
            </summary>
            <param name="claims">需要在登陆的时候配置</param>
            <param name="permissionRequirement">在startup中定义的参数</param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.AuthHelper.PermissionHandler">
            <summary>
            权限授权处理器
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionHandler.Schemes">
            <summary>
            验证方案提供对象
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionHandler._roleModulePermissionServices">
            <summary>
            services 层注入
            </summary>
        </member>
        <member name="M:Blog.Core.AuthHelper.PermissionHandler.#ctor(Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,Blog.Core.IServices.IRoleModulePermissionServices)">
            <summary>
            构造函数注入
            </summary>
            <param name="schemes"></param>
            <param name="roleModulePermissionServices"></param>
        </member>
        <member name="T:Blog.Core.AuthHelper.PermissionItem">
            <summary>
            用户或角色或其他凭据实体,就像是订单详情一样
            之前的名字是 Permission
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionItem.Role">
            <summary>
            用户或角色或其他凭据名称
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionItem.Url">
            <summary>
            请求Url
            </summary>
        </member>
        <member name="T:Blog.Core.AuthHelper.PermissionRequirement">
            <summary>
            必要参数类，类似一个订单信息
            继承 IAuthorizationRequirement，用于设计自定义权限处理器PermissionHandler
            因为AuthorizationHandler 中的泛型参数 TRequirement 必须继承 IAuthorizationRequirement
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.Permissions">
            <summary> 
            用户权限集合，一个订单包含了很多详情，
            同理，一个网站的认证发行中，也有很多权限详情(这里是Role和URL的关系)
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.DeniedAction">
            <summary>
            无权限action
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.ClaimType">
            <summary>
            认证授权类型
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.LoginPath">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.Issuer">
            <summary>
            发行人
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.Audience">
            <summary>
            订阅人
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.Expiration">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:Blog.Core.AuthHelper.PermissionRequirement.SigningCredentials">
            <summary>
            签名验证
            </summary>
        </member>
        <member name="M:Blog.Core.AuthHelper.PermissionRequirement.#ctor(System.String,System.Collections.Generic.List{Blog.Core.AuthHelper.PermissionItem},System.String,System.String,System.String,Microsoft.IdentityModel.Tokens.SigningCredentials,System.TimeSpan)">
            <summary>
            构造
            </summary>
            <param name="deniedAction">拒约请求的url</param>
            <param name="permissions">权限集合</param>
            <param name="claimType">声明类型</param>
            <param name="issuer">发行人</param>
            <param name="audience">订阅人</param>
            <param name="signingCredentials">签名验证实体</param>
            <param name="expiration">过期时间</param>
        </member>
        <member name="M:Blog.Core.AutoMapper.CustomProfile.#ctor">
            <summary>
            配置构造函数，用来创建关系映射
            </summary>
        </member>
        <member name="M:Blog.Core.Common.XmlExtensions.DataToXml``1(PMESWeb.GetSqlDataResponseGetSqlDataResult)">
            <summary>
            扩展方法XML转实体 2019-12-18 zjg
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.BlogController.Get(System.Int32,System.Int32)">
            <summary>
            测试仓储层到领域层到服务层的DTO
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.BlogController.Get(System.Int32)">
            <summary>
            获取博客详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.LoginController.#ctor(Blog.Core.IServices.ISysUserInfoServices,Blog.Core.IServices.IUserRoleServices,Blog.Core.IServices.IRoleServices,Blog.Core.AuthHelper.PermissionRequirement)">
            <summary>
            构造函数注入
            </summary>
            <param name="sysUserInfoServices"></param>
            <param name="userRoleServices"></param>
            <param name="roleServices"></param>
            <param name="requirement"></param>
        </member>
        <member name="M:Blog.Core.Controllers.LoginController.GetJwtStr(System.String,System.String)">
            <summary>
            获取JWT的方法1
            </summary>
            <param name="name"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.LoginController.GetJwtStrForNuxt(System.String,System.String)">
            <summary>
            获取JWT的方法2：给Nuxt提供
            </summary>
            <param name="name"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.LoginController.GetJwtToken3(System.String,System.String)">
            <summary>
            获取JWT的方法3：整个系统主要方法
            </summary>
            <param name="name"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.LoginController.Getjsonp(System.String,System.Int64,System.String,System.Int32,System.Int32)">
            <summary>
            获取JWT的方法4：给 JSONP 测试
            </summary>
            <param name="callBack"></param>
            <param name="id"></param>
            <param name="sub"></param>
            <param name="expiresSliding"></param>
            <param name="expiresAbsoulute"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.Controllers.PDA.V2.AgitationController">
            <summary>
            搅拌
            </summary>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.Load(Blog.Core.Model.PDAViewModel.AgitationLoad)">
            <summary>
            页面加载-设备列表
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.DeviceSelect(Blog.Core.Model.PDAViewModel.DeviceSelectParam)">
            <summary>
            设备基础信息
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.GroupKeyPress(Blog.Core.Model.PDAViewModel.GroupKeyPressParam)">
            <summary>
            组别校验
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.GetShipCarts(Blog.Core.Model.PDAViewModel.GetShipCardParam)">
            <summary>
            获取出货牌
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.Submit(Blog.Core.Model.PDAViewModel.AgitationSubmitParam)">
            <summary>
            提交
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.Close(Blog.Core.Model.PDAViewModel.CloseParam)">
            <summary>
            关结
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.UpdateShipCart(Blog.Core.Model.PDAViewModel.AgitationUpdateShipCartParam)">
            <summary>
            更新
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.GetShipCartAll(Blog.Core.Model.PDAViewModel.DeviceSelectReturns)">
            <summary>
            获取全部出货牌信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.StrstepNameSelecte(Blog.Core.Model.PDAViewModel.AgitationStrstepNameSelecteParam)">
            <summary>
            当前步骤基础信息
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.GetItemInfo(Blog.Core.Model.PDAViewModel.AgitationGetItemInfoParam)">
            <summary>
            物料信息添加
            </summary>
            <param name="jsondata"></param>
            <param name="stepModel"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.DetailSubmit(Blog.Core.Model.PDAViewModel.AgitationDetailParam)">
            <summary>
            提交
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.AgitationController.GetStepList(Blog.Core.Model.PDAViewModel.t_gule_step_infoVM)">
            <summary>
            获取工步名称列表
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.Controllers.PDA.V2.CoatController">
            <summary>
            涂布
            </summary>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.CoatController.AddMaterial(Blog.Core.Model.PDAViewModel.AddMaterialParam)">
            <summary>
            页面加载-设备列表
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.CoatController.Close(Blog.Core.Model.PDAViewModel.CoatCloseParam)">
            <summary>
            关结
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.CoatController.DeviceChanged(Blog.Core.Model.PDAViewModel.DeviceChangedParam)">
            <summary>
            设备基础信息
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.CoatController.OldShipCartChanged(Blog.Core.Model.PDAViewModel.OldShipCartChangedParam)">
            <summary>
            上节点出货牌
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.CoatController.Submit(Blog.Core.Model.PDAViewModel.CoatSubmitParam)">
            <summary>
            提交
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.CoatController.UpdateShipCart(Blog.Core.Model.PDAViewModel.CoatUpdateParam)">
            <summary>
            更新
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.CoatController.CheckUserRole(Blog.Core.Model.PDAViewModel.CheckUserRoleparam)">
            <summary>
            验证权限
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.CoatController.GetShipCartCoat(Blog.Core.Model.PDAViewModel.GetShipCartCoatParam)">
            <summary>
            获取出货牌
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.Controllers.PDA.V2.GlueController">
            <summary>
            打胶
            </summary>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.GlueController.GlueLoad(Blog.Core.Model.PDAViewModel.GlueLoadParam)">
            <summary>
            设备信息-打胶首页
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.GlueController.DeviceSelectChanges(Blog.Core.Model.PDAViewModel.GlueLoadParam)">
            <summary>
            根据设备获取基础信息-打胶首页
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.GlueController.GetShipCard(Blog.Core.Model.PDAViewModel.GetShipCardParam)">
            <summary>
            获取出货牌-打胶首页
            </summary>
            <param name="jsondata">{"device_sn":"FJ-DJ-060-02","productType":"正极打胶","productCode":"ZD"}</param>
            <returns>{"success":true,"msg":"获取数据成功","response":{"s_number":"01","s_date":"20190730","sys_Date":"20200117","shipCard":"ZD202001170201"}}</returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.GlueController.GlueSubmit(Blog.Core.Model.PDAViewModel.GlueSubmitParam)">
            <summary>
            提交基础信息-打胶首页
            </summary>
            <param name="jsondata">{"device_sn":"FJ-DJ-060-02","device_id":"string","work_stationname":"string","productType":"正极打胶","productCode":"string","s_number":"string","s_date":"string","sys_Date":"20200117","shipCard":"ZD202001170201","solution_SUM":"120","strLSH":"01","glueUser":"test01","moNumber":"18E-037","solutions_Name":"溶液名称","outQTY":12,"productItem":"string","input_sum":0,"useR_NAME":"test01","item_value":"string"}</param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.GlueController.GlueClose(Blog.Core.Model.PDAViewModel.GlueCloseParam)">
            <summary>
            关结-打胶首页
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.GlueController.GetCurrentStepLoad(Blog.Core.Model.PDAViewModel.GlueDetailParam)">
            <summary>
            打胶参数录入-页面加载
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.GlueController.CurrenStepSelectChanges(Blog.Core.Model.PDAViewModel.CurrenStepSelectChangesParam)">
            <summary>
            打胶参数录入-当前步骤值改变事件
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.GlueController.SubmitGlue(Blog.Core.Model.PDAModel.GlueDetailModel)">
            <summary>
            提交信息-打胶参数录入
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.LoginController.Login(Blog.Core.Model.PDAViewModel.LoginParam)">
            <summary>
            PDA用户登录
            </summary>
            <returns></returns>
        </member>
        <member name="T:Blog.Core.Controllers.PDA.V2.PdaServiceController">
            <summary>
            公共接口
            </summary>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.PdaServiceController.Close(Blog.Core.Model.PDAViewModel.CloseParam)">
            <summary>
            关结
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.PdaServiceController.DeviceLoad(Blog.Core.Model.PDAViewModel.GlueLoadParam)">
            <summary>
            设备信息
            </summary>
            <param name="jsondata"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.PDA.V2.PdaServiceController.VersionInfo">
            <summary>
            PDA版本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.TransactionController.TestTranInRepositoryAOP(System.Int32)">
            <summary>
            测试AOP事务
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.V1.ApbController.Get">
            <summary>
            V1版本的测试接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.V2.ApbController.Get">
            <summary>
            V2版本的测试接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.ValuesController.Get">
            <summary>
            v1版本的接口信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Controllers.ValuesController.V2_Get">
            <summary>
            v2版本的接口信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Blog.Core.Filter.GlobalExceptionsFilter.WriteLog(System.String,System.String,System.Exception)">
            <summary>
            自定义返回格式
            </summary>
            <param name="throwMsg"></param>
            <param name="resultJson"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="P:Blog.Core.Filter.JsonErrorResponse.Message">
            <summary>
            生产环境的消息
            </summary>
        </member>
        <member name="P:Blog.Core.Filter.JsonErrorResponse.DevelopmentMessage">
            <summary>
            开发环境的消息
            </summary>
        </member>
        <member name="P:Blog.Core.Filter.JsonErrorResponse.ResultJson">
            <summary>
            传入Json参数
            </summary>
        </member>
        <member name="T:Blog.Core.Middlewares.RequRespLogMildd">
            <summary>
            中间件
            记录请求和响应数据
            </summary>
        </member>
        <member name="F:Blog.Core.Middlewares.RequRespLogMildd._next">
            <summary>
            
            </summary>
        </member>
        <member name="M:Blog.Core.Middlewares.RequRespLogMildd.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Blog.Core.IServices.IBlogArticleServices)">
            <summary>
            
            </summary>
            <param name="next"></param>
            <param name="blogArticleServices"></param>
        </member>
        <member name="P:Blog.Core.Startup.repository">
            <summary>
            log4net 仓储库
            </summary>
        </member>
        <member name="T:Blog.Core.SwaggerHelper.CustomApiVersion">
            <summary>
            自定义版本
            </summary>
        </member>
        <member name="T:Blog.Core.SwaggerHelper.CustomApiVersion.ApiVersions">
            <summary>
            Api接口版本 自定义
            </summary>
        </member>
        <member name="F:Blog.Core.SwaggerHelper.CustomApiVersion.ApiVersions.V1">
            <summary>
            V1 版本
            </summary>
        </member>
        <member name="F:Blog.Core.SwaggerHelper.CustomApiVersion.ApiVersions.V2">
            <summary>
            V2 版本
            </summary>
        </member>
        <member name="T:Blog.Core.SwaggerHelper.CustomRouteAttribute">
            <summary>
            自定义路由 /api/{version}/[controler]/[action]
            </summary>
        </member>
        <member name="P:Blog.Core.SwaggerHelper.CustomRouteAttribute.GroupName">
            <summary>
            分组名称,是来实现接口 IApiDescriptionGroupNameProvider
            </summary>
        </member>
        <member name="M:Blog.Core.SwaggerHelper.CustomRouteAttribute.#ctor(System.String)">
            <summary>
            自定义路由构造函数，继承基类路由
            </summary>
            <param name="actionName"></param>
        </member>
        <member name="M:Blog.Core.SwaggerHelper.CustomRouteAttribute.#ctor(Blog.Core.SwaggerHelper.CustomApiVersion.ApiVersions,System.String)">
            <summary>
            自定义版本+路由构造函数，继承基类路由
            </summary>
            <param name="actionName"></param>
            <param name="version"></param>
        </member>
        <member name="T:PMESWeb.GetSqlDataResponseGetSqlDataResult">
            <remarks/>
        </member>
        <member name="P:PMESWeb.GetSqlDataResponseGetSqlDataResult.Any">
            <remarks/>
        </member>
        <member name="P:PMESWeb.GetSqlDataResponseGetSqlDataResult.Any1">
            <remarks/>
        </member>
    </members>
</doc>
